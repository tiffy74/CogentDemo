//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace CogentDemo.Code.DocumentTypes
{
	/// <summary>ArticlePost</summary>
	[PublishedContentModel("articlePost")]
	public partial class ArticlePost : Layout, IContentBase, IHeaderSection, INavigationBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "articlePost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticlePost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticlePost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Nested Content
		///</summary>
		[ImplementPropertyType("nestedContent")]
		public IEnumerable<IPublishedContent> NestedContent
		{
			get { return CogentDemo.Code.DocumentTypes.ContentBase.GetNestedContent(this); }
		}

		///<summary>
		/// Image: Add an image to be used in the SPotlight for your article
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return CogentDemo.Code.DocumentTypes.HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Snippet: Provide a brief summary of the article
		///</summary>
		[ImplementPropertyType("headerSubtitle")]
		public string HeaderSubtitle
		{
			get { return CogentDemo.Code.DocumentTypes.HeaderSection.GetHeaderSubtitle(this); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("headerTitle")]
		public string HeaderTitle
		{
			get { return CogentDemo.Code.DocumentTypes.HeaderSection.GetHeaderTitle(this); }
		}

		///<summary>
		/// seoMetaDescription
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return CogentDemo.Code.DocumentTypes.NavigationBase.GetSeoMetaDescription(this); }
		}
	}
}
